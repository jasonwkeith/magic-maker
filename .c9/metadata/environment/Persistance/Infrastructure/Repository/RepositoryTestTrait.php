{"filter":false,"title":"RepositoryTestTrait.php","tooltip":"/Persistance/Infrastructure/Repository/RepositoryTestTrait.php","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":0,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":["<?php","declare( strict_types = 1 );","namespace JasonWKeith\\Persistance\\Infrastructure\\Repository;","","trait RepositoryTrait","{"],"id":1}],[{"start":{"row":5,"column":1},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":6,"column":0},"end":{"row":6,"column":4},"action":"insert","lines":["    "]},{"start":{"row":6,"column":4},"end":{"row":7,"column":0},"action":"insert","lines":["",""]},{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"insert","lines":["    "]},{"start":{"row":7,"column":4},"end":{"row":8,"column":0},"action":"insert","lines":["",""]},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"insert","lines":["    "]},{"start":{"row":8,"column":4},"end":{"row":8,"column":5},"action":"insert","lines":["}"]},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"insert","lines":["T"],"id":3},{"start":{"row":4,"column":17},"end":{"row":4,"column":18},"action":"insert","lines":["e"]},{"start":{"row":4,"column":18},"end":{"row":4,"column":19},"action":"insert","lines":["s"]},{"start":{"row":4,"column":19},"end":{"row":4,"column":20},"action":"insert","lines":["t"]}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":4},"action":"remove","lines":["    "],"id":4},{"start":{"row":6,"column":0},"end":{"row":111,"column":7},"action":"insert","lines":["    public function testCallingRemoveDoesNotRemoveWrongEntity(): void","    {","        $entities = $this->getEntities();","        $entity = $entities [ 3 ];","        unset( $entities[ 3 ] );","        ","        $this->system_under_test->remove( $entity->getGUID() );","        ","        $this->validateRepositoryReturnsEachEntity( $entities );      ","    }","    ","    public function testCallingRemoveDoesRemoveCorrectEntity(): void","    {","        $entities = $this->getEntities();","        $entity = $entities [ 5 ];","","        $this->system_under_test->remove( $entity->getGUID() );","","        $this->expectException( ExceptionInterface::class ) ;","        $this->system_under_test->get( $entity->getGUID() ) ;","    }    ","    ","    public function testCallingGetWithInvalidGUIDThrowsException(): void","    {","        $entities = $this->getEntities();","        $entity = $entities [ 7 ];        ","        $this->system_under_test->remove( $entity->getGUID() );","","        $this->expectException( ExceptionInterface::class ) ;","        $this->system_under_test->get( $entity->getGUID() ) ;","    }        ","","    public function testCallingRemoveWithInvalidGUIDThrowsException(): void","    {","        $entities = $this->getEntities();","        $entity = $entities [ 9 ];        ","        $this->system_under_test->remove( $entity->getGUID() );","","        $this->expectException( ExceptionInterface::class ) ;","        $this->system_under_test->remove( $entity->getGUID() ) ;","    }      ","    ","    ","    public function testRepositoryReturnsCorrectEntityByGUID(): void","    {","        $this->validateRepositoryReturnsEachEntity( $this->getEntities() );","    }","","    public function testTearDown(): void","    {","        $this->assertEquals( true, true );","    }","    ","    protected function setUp(): void","    {","        $this->domain_api_factory = new DomainAPIFactory;","        $this->domain_api = $this->domain_api_factory->create();","        ","        $this->data_object_api = $this->createDataObjectAPI();","        $this->test_data_api = $this->createTestDataAPI();","        $this->test_data_factory = $this->test_data_api->createBookTestDataFactory();","        ","        $this->api_factory = new APIFactory( TestConstants::STORAGE_PATH, TestConstants::STORAGE_EXTENSION, $this->domain_api );","        $this->api = $this->api_factory->create();","","        $this->system_under_test = $this->api->createBookRepository();","    }","    ","    private function getEntities(): array","    {","        $entities[ 0 ] = $this->test_data_factory->create0(); ","        $entities[ 1 ] = $this->test_data_factory->create1();         ","        $entities[ 2 ] = $this->test_data_factory->create2();        ","        $entities[ 3 ] = $this->test_data_factory->create3();","        $entities[ 4 ] = $this->test_data_factory->create4();","        $entities[ 5 ] = $this->test_data_factory->create5();","        $entities[ 6 ] = $this->test_data_factory->create6();        ","        $entities[ 7 ] = $this->test_data_factory->create7();","        $entities[ 8 ] = $this->test_data_factory->create8();","        $entities[ 9 ] = $this->test_data_factory->create9();","        return $entities;","    }","    ","    protected function tearDown(): void","    {","        $this->system_under_test->add( $this->test_data_factory->create8() );","        $this->system_under_test->add( $this->test_data_factory->create0() );","        $this->system_under_test->add( $this->test_data_factory->create9() ); ","        $this->system_under_test->add( $this->test_data_factory->create7() );","        $this->system_under_test->add( $this->test_data_factory->create1() );","        $this->system_under_test->add( $this->test_data_factory->create2() );  ","        $this->system_under_test->add( $this->test_data_factory->create3() );","        $this->system_under_test->add( $this->test_data_factory->create4() );  ","        $this->system_under_test->add( $this->test_data_factory->create5() ); ","        $this->system_under_test->add( $this->test_data_factory->create6() );","    }","    ","    private function validateRepositoryReturnsEachEntity( array $entities )","    {","        $keys = array_keys( $entities );","        ","        foreach( $keys as $key )","        {","            $this->assertEquals( $entities[ $key ], $this->system_under_test->get( $entities[ $key ]->getGUID() ) );","        }","    }  "]}],[{"start":{"row":58,"column":0},"end":{"row":72,"column":5},"action":"remove","lines":["    ","    protected function setUp(): void","    {","        $this->domain_api_factory = new DomainAPIFactory;","        $this->domain_api = $this->domain_api_factory->create();","        ","        $this->data_object_api = $this->createDataObjectAPI();","        $this->test_data_api = $this->createTestDataAPI();","        $this->test_data_factory = $this->test_data_api->createBookTestDataFactory();","        ","        $this->api_factory = new APIFactory( TestConstants::STORAGE_PATH, TestConstants::STORAGE_EXTENSION, $this->domain_api );","        $this->api = $this->api_factory->create();","","        $this->system_under_test = $this->api->createBookRepository();","    }"],"id":5},{"start":{"row":58,"column":0},"end":{"row":59,"column":4},"action":"remove","lines":["","    "]}],[{"start":{"row":53,"column":0},"end":{"row":58,"column":0},"action":"remove","lines":["","    public function testTearDown(): void","    {","        $this->assertEquals( true, true );","    }",""],"id":6},{"start":{"row":53,"column":0},"end":{"row":54,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":53,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["",""],"id":7}],[{"start":{"row":65,"column":61},"end":{"row":66,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":66,"column":0},"end":{"row":66,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":76},"action":"insert","lines":["use JasonWKeith\\Domain\\Boundary\\Infrastructure\\Exception\\ExceptionInterface;"],"id":10}],[{"start":{"row":4,"column":76},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":11}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":0},"end":{"row":5,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1618768098936,"hash":"295fb05db0fbc7722c8347a1ac43df7265ccc19b"}