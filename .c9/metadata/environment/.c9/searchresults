{"changed":true,"filter":false,"title":"searchresults","tooltip":"/.c9/searchresults","value":"Searching for \u0001PATH\u0001 in\u0001/Persistance/Infrastructure\u0001 (Found 97 matches in 15 files)\n\n/Persistance/Infrastructure/TestConstants.php:\n\t8:     public const ARCHIVE_PATH =\"/jasonwkeith/Storage/Development/Archive/\";\n\t9:     public const STORAGE_PATH =\"/jasonwkeith/Storage/Development/\";\n\n/Persistance/Infrastructure/API/API.php:\n\t39:         string $storage_path,\n\t49:         $this->storage_path = $storage_path;\n\t81:     public function createFileConnectionParameters( string $path, string $file_handle, string $file_extension ):  ConnectionParametersInterface\n\t83:         return $this->connection_parameters_factory->createFileConnection( $path, $file_handle, $file_extension );\n\t102:     public function getStoragePath(): string\n\t104:         return $this->storage_path;\n\n/Persistance/Infrastructure/API/APIFactory.php:\n\t16:     public function create( string $storage_path, DomainAPIInterface $domain_api, ExceptionFactoryInterface $exception_factory ): APIInterface\n\t20:             $storage_path,\n\n/Persistance/Infrastructure/API/APIFactoryInterface.php:\n\t10:     public function create( string $storage_path, DomainAPIInterface $domain_api, ExceptionFactoryInterface $exception_factory ): APIInterface;\n\n/Persistance/Infrastructure/API/APIInterface.php:\n\t11:     public function createFileConnectionParameters( string $path, string $file_handle, string $file_extension ): ConnectionParametersInterface;\n\t14:     public function getStoragePath(): string;\n\n/Persistance/Infrastructure/ArchiveReader/ArchiveReader.php:\n\t21:         $file_path = $this->connection_parameters[ ConnectionParametersInterface::PATH ] . $guid . \".\" . $this->connection_parameters[ ConnectionParametersInterface::FILE_EXTENSION ];\n\t22:         echo \"PATH: \". var_dump( $file_path );\n\t25:         if( $this->isFilePathInvalid( $file_path) )\n\t31:             $this->validateFilePath( $file_path );                \n\t34:         $resource = $this->getFileResource( $file_path, $mode ) ;\n\t35:         $length = $this->getFileSize( $file_path );\n\n/Persistance/Infrastructure/ArchiveWriter/ArchiveWriter.php:\n\t17:         $this->validatePath( $this->connection_parameters[ ConnectionParametersInterface::PATH ] );\n\t22:         $file_path = $this->connection_parameters[ ConnectionParametersInterface::PATH ] . \"/\" . $guid . \".\" . $this->connection_parameters[ ConnectionParametersInterface::FILE_EXTENSION ];\n\t23:         $resource = $this->getFileResource( $file_path, 'w+' ) ;\n\n/Persistance/Infrastructure/ConnectionParameters/ConnectionParametersFactory.php:\n\t7:     public function createFileConnection( string $path, string $file_handle, string $file_extension ): ConnectionParametersInterface\n\t11:         $parameters[ ConnectionParametersInterface::PATH ] = $path;\n\t12:         $parameters[ ConnectionParametersInterface::FILE_PATH ] = $parameters[ ConnectionParametersInterface::PATH ] . $parameters[ ConnectionParametersInterface::FILE_HANDLE ] .\".\" . $parameters[ ConnectionParametersInterface::FILE_EXTENSION ];\n\n/Persistance/Infrastructure/ConnectionParameters/ConnectionParametersFactoryInterface.php:\n\t7:     public function createFileConnection( string $path, string $file_path, string $file_extension ): ConnectionParametersInterface;\n\n/Persistance/Infrastructure/ConnectionParameters/ConnectionParametersInterface.php:\n\t7:     public const PATH = \"path\";\n\t10:     public const FILE_PATH = \"file_path\";\n\n/Persistance/Infrastructure/FileHandler/FileHandlerTrait.php:\n\t11:     private function getFileResource( string $file_path, string $mode)\n\t13:         $resource = fopen( $file_path, $mode );\n\t16:             throw $this->createException( \"Could not create a valid resource for $file_path using mode $mode\" );\n\t21:     private function getFileSize( string $file_path ): int\n\t24:         return filesize( $file_path );\n\t27:     private function isFilePathInvalid( string $path ): bool\n\t29:         return ! is_file( $path );\n\t32:     private function isPathInvalid( string $path ): bool\n\t34:         return ! is_dir( $path );\n\t48:     private function validateFilePath( string $file_path ) : void\n\t50:         if( $this->isFilePathInvalid( $file_path ) )\n\t52:             $message = \"Invalid file path.  Provided file path was: $file_path\";\n\t57:     private function validatePath( string $path ) : void\n\t59:         if( $this->isPathInvalid( $path) )\n\t61:             $message = \"Invalid path.  Provided path was: $path\";\n\n/Persistance/Infrastructure/ReaderConnection/FileReaderConnection.php:\n\t17:         $this->validateFilePath( $this->connection_parameters[ ConnectionParametersInterface::FILE_PATH ] );        \n\t22:         $resource = $this->getFileResource( $this->connection_parameters[ ConnectionParametersInterface::FILE_PATH ], 'r' ) ;\n\t23:         $length = $this->getFileSize( $this->connection_parameters[ ConnectionParametersInterface::FILE_PATH ] );\n\n/Persistance/Infrastructure/ReaderConnection/FileReaderConnectionTest.php:\n\t21:     public function testInvalidFilePathThrowsException():void\n\t23:         $invalid_path = \"/jasonwkeith/Storage/Invalid/Path\";\n\t24:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $invalid_path, $this->file_handle, $this->file_extension );\n\t32:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path, $invalid_handle, $this->file_extension );\n\t40:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path, $this->file_handle, $invalid_extension );\n\t55:         $this->infrastructure_api = $this->infrastructure_api_factory->create( TestConstants::STORAGE_PATH, $this->domain_api, $this->exception_factory );\n\t57:         $this->path = $this->infrastructure_api->getStoragePath();\n\t58:         $this->file_path = $this->path . $this->file_handle . \".\" . $this->file_extension;\n\t59:         $this->test_data = file_get_contents( $this->file_path );\n\t61:         $this->connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path, $this->file_handle, $this->file_extension );\n\n/Persistance/Infrastructure/WriterConnection/FileWriterConnection.php:\n\t19:         $this->validatePath( $this->connection_parameters[ ConnectionParametersInterface::PATH ] );\n\t24:         $resource = $this->getFileResource( $this->connection_parameters[ ConnectionParametersInterface::FILE_PATH ], 'w+' ) ;\n\n/Persistance/Infrastructure/WriterConnection/FileWriterConnectionTest.php:\n\t17:         $contents = file_get_contents( $this->file_path );\n\t21:     public function testInvalidFilePathThrowsException():void\n\t23:         $invalid_path = \"/jasonwkeith/Storage/Invalid/Path\";\n\t24:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $invalid_path, $this->file_handle, $this->file_extension );\n\t31:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path.\"/Lockers\", $this->file_handle, $this->file_extension );\n\t47:         $this->infrastructure_api = $this->infrastructure_api_factory->create( TestConstants::STORAGE_PATH, $this->domain_api, $this->exception_factory );\n\t49:         $this->path = $this->infrastructure_api->getStoragePath();\n\t50:         $this->file_path = $this->path . $this->file_handle . \".\" . $this->file_extension;\n\t52:         $this->connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path, $this->file_handle, $this->file_extension );\n\nFound 97 matches in 15 files \n\n","undoManager":{"mark":-2,"position":18,"stack":[[{"start":{"row":0,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["Searching for \u0001use JasonWKeith\\Domain\\Boundary\\Person\\PersonDTOFactoryInterface;\u0001, replaced as \u0001use JasonWKeith\\Domain\\Boundary\\DataObject\\Person\\PersonDTOFactoryInterface;\u0001 in\u0001/Domain\u0001 (Found 2 matches in 2 files)","","/Domain/DataObject/Person/PersonDTOFactory.php:","\t6: use JasonWKeith\\Domain\\Boundary\\Person\\PersonDTOFactoryInterface;","","/Domain/DataObject/Person/RawPersonTestDataFactory.php:","\t6: use JasonWKeith\\Domain\\Boundary\\Person\\PersonDTOFactoryInterface;","","Found 2 matches in 2 files ","",""],"id":1},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001var_dump\u0001 in\u0001/Storage/Development/Archive/application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":0,"column":69},"end":{"row":0,"column":98},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001var_dump\u0001 in\u0001/Storage/Development/Archive/application\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001var_dump\u0001 in\u0001/Persistance\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/ArchiveReader/ArchiveReader.php:",""]},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t35:         var_dump( \"MODE: $mode\" );","",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["Found 1 match in 1 file ",""]}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":0,"column":41},"end":{"row":0,"column":67},"action":"insert","lines":[" (Found 1 match in 1 file)"]}],[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["Searching for \u0001var_dump\u0001 in\u0001/Persistance\u0001 (Found 1 match in 1 file)","","/Persistance/Infrastructure/ArchiveReader/ArchiveReader.php:","\t35:         var_dump( \"MODE: $mode\" );","","Found 1 match in 1 file ","",""],"id":5},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001vardump\u0001 in\u0001/Storage/Development/Archive/application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":68},"end":{"row":0,"column":97},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001vardump\u0001 in\u0001/Storage/Development/Archive/application\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":6},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001var_dump\u0001 in\u0001/Storage/Development/Archive/application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":69},"end":{"row":0,"column":98},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001var_dump\u0001 in\u0001/Storage/Development/Archive/application\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":7},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001var_\u0001 in\u0001/Persistance/DataObject/Application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":0,"column":60},"end":{"row":0,"column":89},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["",""],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["Searching for \u0001var_\u0001 in\u0001/Persistance/DataObject/Application\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ",""],"id":10},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001print\u0001 in\u0001/Persistance/DataObject/Application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":61},"end":{"row":0,"column":90},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001print\u0001 in\u0001/Persistance/DataObject/Application\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":11},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001echo\u0001 in\u0001/Persistance/DataObject/Application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":0,"column":60},"end":{"row":0,"column":89},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001echo\u0001 in\u0001/Persistance/DataObject/Application\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":13},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001var\u0001 in\u0001/Persistance/DataObject/Application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":0,"column":59},"end":{"row":0,"column":88},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001var\u0001 in\u0001/Persistance/DataObject/Application\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":15},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001\"PATH:\"\u0001 in\u0001/Persistance/DataObject/Application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":63},"end":{"row":0,"column":92},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001\"PATH:\"\u0001 in\u0001/Persistance/DataObject/Application\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":16},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001\"PATH\"\u0001 in\u0001/Persistance/DataObject/Application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":62},"end":{"row":0,"column":91},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["P"],"id":17},{"start":{"row":4,"column":1},"end":{"row":4,"column":2},"action":"insert","lines":["A"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":2},"action":"remove","lines":["Searching for \u0001\"PATH\"\u0001 in\u0001/Persistance/DataObject/Application\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","","PA"],"id":18},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001PATH\u0001 in\u0001/Persistance/DataObject/Application\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/Persistance/DataObject/Application/ApplicationArchiverTest.php:",""]},{"start":{"row":3,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["\t37:         $this->api_factory = new APIFactory( TestConstants::ARCHIVE_PATH, TestConstants::STORAGE_PATH, TestConstants::STORAGE_EXTENSION, $this->domain_api );","\t38:         $this->api = $this->api_factory->create( TestConstants::STORAGE_PATH, $this->domain_api, $this->createExceptionFactory() );","\t40:         $connection_parameters = $this->api->createFileConnectionParameters( TestConstants::ARCHIVE_PATH, \"\", TestConstants::ARCHIVE_EXTENSION );","",""]},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["/Persistance/DataObject/Application/ApplicationRepositoryTest.php:",""]},{"start":{"row":8,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["\t28:         $this->api_factory = new APIFactory( TestConstants::ARCHIVE_PATH, TestConstants::STORAGE_PATH, TestConstants::STORAGE_EXTENSION, $this->domain_api );","",""]},{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["Found 6 matches in 2 files ",""]},{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":60},"end":{"row":0,"column":89},"action":"insert","lines":[" (Found 6 matches in 2 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":12,"column":0},"action":"remove","lines":["Searching for \u0001PATH\u0001 in\u0001/Persistance/DataObject/Application\u0001 (Found 6 matches in 2 files)","","/Persistance/DataObject/Application/ApplicationArchiverTest.php:","\t37:         $this->api_factory = new APIFactory( TestConstants::ARCHIVE_PATH, TestConstants::STORAGE_PATH, TestConstants::STORAGE_EXTENSION, $this->domain_api );","\t38:         $this->api = $this->api_factory->create( TestConstants::STORAGE_PATH, $this->domain_api, $this->createExceptionFactory() );","\t40:         $connection_parameters = $this->api->createFileConnectionParameters( TestConstants::ARCHIVE_PATH, \"\", TestConstants::ARCHIVE_EXTENSION );","","/Persistance/DataObject/Application/ApplicationRepositoryTest.php:","\t28:         $this->api_factory = new APIFactory( TestConstants::ARCHIVE_PATH, TestConstants::STORAGE_PATH, TestConstants::STORAGE_EXTENSION, $this->domain_api );","","Found 6 matches in 2 files ","",""],"id":19},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001PATH\u0001 in\u0001/Persistance/Infrastructure\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/TestConstants.php:",""]},{"start":{"row":3,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["\t8:     public const ARCHIVE_PATH =\"/jasonwkeith/Storage/Development/Archive/\";","\t9:     public const STORAGE_PATH =\"/jasonwkeith/Storage/Development/\";","",""]},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/API/API.php:",""]},{"start":{"row":7,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["\t39:         string $storage_path,","\t49:         $this->storage_path = $storage_path;","\t81:     public function createFileConnectionParameters( string $path, string $file_handle, string $file_extension ):  ConnectionParametersInterface","\t83:         return $this->connection_parameters_factory->createFileConnection( $path, $file_handle, $file_extension );","\t102:     public function getStoragePath(): string","\t104:         return $this->storage_path;","",""]},{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/API/APIFactory.php:",""]},{"start":{"row":15,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["\t16:     public function create( string $storage_path, DomainAPIInterface $domain_api, ExceptionFactoryInterface $exception_factory ): APIInterface","\t20:             $storage_path,","",""]},{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/API/APIFactoryInterface.php:",""]},{"start":{"row":19,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["\t10:     public function create( string $storage_path, DomainAPIInterface $domain_api, ExceptionFactoryInterface $exception_factory ): APIInterface;","",""]},{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/API/APIInterface.php:",""]},{"start":{"row":22,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["\t11:     public function createFileConnectionParameters( string $path, string $file_handle, string $file_extension ): ConnectionParametersInterface;","\t14:     public function getStoragePath(): string;","",""]},{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/ArchiveReader/ArchiveReader.php:",""]},{"start":{"row":26,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["\t21:         $file_path = $this->connection_parameters[ ConnectionParametersInterface::PATH ] . $guid . \".\" . $this->connection_parameters[ ConnectionParametersInterface::FILE_EXTENSION ];","\t22:         echo \"PATH: \". var_dump( $file_path );","\t25:         if( $this->isFilePathInvalid( $file_path) )","\t31:             $this->validateFilePath( $file_path );                ","\t34:         $resource = $this->getFileResource( $file_path, $mode ) ;","\t35:         $length = $this->getFileSize( $file_path );","",""]},{"start":{"row":33,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/ArchiveWriter/ArchiveWriter.php:",""]},{"start":{"row":34,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["\t17:         $this->validatePath( $this->connection_parameters[ ConnectionParametersInterface::PATH ] );","\t22:         $file_path = $this->connection_parameters[ ConnectionParametersInterface::PATH ] . \"/\" . $guid . \".\" . $this->connection_parameters[ ConnectionParametersInterface::FILE_EXTENSION ];","\t23:         $resource = $this->getFileResource( $file_path, 'w+' ) ;","",""]},{"start":{"row":38,"column":0},"end":{"row":39,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/ConnectionParameters/ConnectionParametersFactory.php:",""]},{"start":{"row":39,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["\t7:     public function createFileConnection( string $path, string $file_handle, string $file_extension ): ConnectionParametersInterface","\t11:         $parameters[ ConnectionParametersInterface::PATH ] = $path;","\t12:         $parameters[ ConnectionParametersInterface::FILE_PATH ] = $parameters[ ConnectionParametersInterface::PATH ] . $parameters[ ConnectionParametersInterface::FILE_HANDLE ] .\".\" . $parameters[ ConnectionParametersInterface::FILE_EXTENSION ];","",""]},{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["/Persistance/Infrastructure/ConnectionParameters/ConnectionParametersFactoryInterface.php:",""]},{"start":{"row":44,"column":0},"end":{"row":100,"column":0},"action":"insert","lines":["\t7:     public function createFileConnection( string $path, string $file_path, string $file_extension ): ConnectionParametersInterface;","","/Persistance/Infrastructure/ConnectionParameters/ConnectionParametersInterface.php:","\t7:     public const PATH = \"path\";","\t10:     public const FILE_PATH = \"file_path\";","","/Persistance/Infrastructure/FileHandler/FileHandlerTrait.php:","\t11:     private function getFileResource( string $file_path, string $mode)","\t13:         $resource = fopen( $file_path, $mode );","\t16:             throw $this->createException( \"Could not create a valid resource for $file_path using mode $mode\" );","\t21:     private function getFileSize( string $file_path ): int","\t24:         return filesize( $file_path );","\t27:     private function isFilePathInvalid( string $path ): bool","\t29:         return ! is_file( $path );","\t32:     private function isPathInvalid( string $path ): bool","\t34:         return ! is_dir( $path );","\t48:     private function validateFilePath( string $file_path ) : void","\t50:         if( $this->isFilePathInvalid( $file_path ) )","\t52:             $message = \"Invalid file path.  Provided file path was: $file_path\";","\t57:     private function validatePath( string $path ) : void","\t59:         if( $this->isPathInvalid( $path) )","\t61:             $message = \"Invalid path.  Provided path was: $path\";","","/Persistance/Infrastructure/ReaderConnection/FileReaderConnection.php:","\t17:         $this->validateFilePath( $this->connection_parameters[ ConnectionParametersInterface::FILE_PATH ] );        ","\t22:         $resource = $this->getFileResource( $this->connection_parameters[ ConnectionParametersInterface::FILE_PATH ], 'r' ) ;","\t23:         $length = $this->getFileSize( $this->connection_parameters[ ConnectionParametersInterface::FILE_PATH ] );","","/Persistance/Infrastructure/ReaderConnection/FileReaderConnectionTest.php:","\t21:     public function testInvalidFilePathThrowsException():void","\t23:         $invalid_path = \"/jasonwkeith/Storage/Invalid/Path\";","\t24:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $invalid_path, $this->file_handle, $this->file_extension );","\t32:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path, $invalid_handle, $this->file_extension );","\t40:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path, $this->file_handle, $invalid_extension );","\t55:         $this->infrastructure_api = $this->infrastructure_api_factory->create( TestConstants::STORAGE_PATH, $this->domain_api, $this->exception_factory );","\t57:         $this->path = $this->infrastructure_api->getStoragePath();","\t58:         $this->file_path = $this->path . $this->file_handle . \".\" . $this->file_extension;","\t59:         $this->test_data = file_get_contents( $this->file_path );","\t61:         $this->connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path, $this->file_handle, $this->file_extension );","","/Persistance/Infrastructure/WriterConnection/FileWriterConnection.php:","\t19:         $this->validatePath( $this->connection_parameters[ ConnectionParametersInterface::PATH ] );","\t24:         $resource = $this->getFileResource( $this->connection_parameters[ ConnectionParametersInterface::FILE_PATH ], 'w+' ) ;","","/Persistance/Infrastructure/WriterConnection/FileWriterConnectionTest.php:","\t17:         $contents = file_get_contents( $this->file_path );","\t21:     public function testInvalidFilePathThrowsException():void","\t23:         $invalid_path = \"/jasonwkeith/Storage/Invalid/Path\";","\t24:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $invalid_path, $this->file_handle, $this->file_extension );","\t31:         $connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path.\"/Lockers\", $this->file_handle, $this->file_extension );","\t47:         $this->infrastructure_api = $this->infrastructure_api_factory->create( TestConstants::STORAGE_PATH, $this->domain_api, $this->exception_factory );","\t49:         $this->path = $this->infrastructure_api->getStoragePath();","\t50:         $this->file_path = $this->path . $this->file_handle . \".\" . $this->file_extension;","\t52:         $this->connection_parameters = $this->infrastructure_api->createFileConnectionParameters( $this->path, $this->file_handle, $this->file_extension );","","Found 97 matches in 15 files ",""]},{"start":{"row":100,"column":0},"end":{"row":101,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":52},"end":{"row":0,"column":83},"action":"insert","lines":[" (Found 97 matches in 15 files)"]}]]},"ace":{"folds":[],"scrolltop":240,"scrollleft":0,"selection":{"start":{"row":25,"column":42},"end":{"row":25,"column":55},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":16,"state":["start",{}],"mode":"ace/mode/c9search"}},"timestamp":1616605857896}